<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>bill-demo</groupId>
    <artifactId>spring</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>spring-jpa</module>
        <module>spring-cloud</module>
        <module>spring-app</module>
    </modules>
    <properties>
        <project.registry.url/>
        <project.registry.id/>

    </properties>


    <repositories>
        <repository>
            <id>central</id>
            <name>Central Repository</name>
            <url>http://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <id>spring-central</id>
            <name>spring-libs-release</name>
            <url>https://repo.spring.io/libs-release</url>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>spring-libs-snapshot</name>
            <url>https://repo.spring.io/libs-snapshot</url>
        </repository>
        <repository>
            <id>jcenter-snapshots</id>
            <name>jcenter</name>
            <url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
        </repository>
    </repositories>
    <!--
        sonar part

            1, docker sonar locally
                docker pull sonarqube  #download sonar docker image

                docker run -rm -p 9000:9000 -v ,<local_extensions_folder> sonarqube:latest #start up sonar
            2, merge ~/.m2/setting
            <settings>
                <localRepository>~\.m2\repository</localRepository>
                <pluginGroups>
                    <pluginGroup>org.sonarsource.scanner.maven</pluginGroup>
                </pluginGroups>
                <profiles>
                    <profile>
                        <id>sonar</id>
                        <activation>
                        <activeByDefault>true</activeByDefault>
                        </activation>
                        <properties>
                        <sonar.host.url>http://localhost:9000</sonar.host.url>
                        <sonar.login>admin</sonar.login>
                        <sonar.password>admin</sonar.password>
                        <sonar.sources>src/main</sonar.sources>
                        <sonar.tests>src/test</sonar.tests>
                        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
                        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
                        <sonar.language>java</sonar.language>
                        <sonar.scm.exclusions.disabled>true</sonar.scm.exclusions.disabled>
                        <sonar.coverage.jacoco.xmlReportPaths>target/site</sonar.coverage.jacoco.xmlReportPaths>
                        </properties>
                    </profile>
                </profiles>
            </settings>

            3, trigger sonar by command line 'mvn verify sonar:sonar'

        site part search maven site:site
    -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.9.0</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.3</version>
                <configuration>
                    <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
                    <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
                    <output>file</output>
                    <append>true</append>
                </configuration>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <phase>test-compile</phase>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>